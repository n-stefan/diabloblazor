class Graphics{constructor(){this.initGraphics=n=>{const t=document.getElementById("canvas");this.context=n?t.getContext("bitmaprenderer"):t.getContext("2d",{alpha:!1})};this.render=n=>{if(this.context instanceof ImageBitmapRenderingContext)this.context.transferFromImageBitmap(n.bitmap);else if(this.context instanceof CanvasRenderingContext2D){const t=this.context;for(const i of n.images){const n=t.createImageData(i.width,i.height),r=window.Blazor.runtime.localHeapViewU8().subarray(i.data,i.data+i.width*i.height*4);n.data.set(r);t.putImageData(n,i.x,i.y)}if(n.text.length){if(t.save(),t.font="bold 13px Times New Roman",n.clip){const i=n.clip;t.beginPath();t.rect(i.x0,i.y0,i.x1-i.x0,i.y1-i.y0);t.clip()}for(const i of n.text){const n=i.color>>16&255,r=i.color>>8&255,u=i.color&255;t.fillStyle=`rgb(${n}, ${r}, ${u})`;t.fillText(i.text,i.x,i.y)}t.restore()}}}}}class Sound{constructor(){this.initSound=()=>{const n=window.AudioContext||window.webkitAudioContext;if(n){this.context=null;try{this.context=new AudioContext}catch(t){console.error(t)}this.sounds=new Map}};this.createSound=(n,t)=>{if(this.context){const i=this.decodeAudioData(this.context,t.buffer);this.sounds.set(n,{buffer:i,gain:this.context.createGain(),panner:StereoPannerNode&&new StereoPannerNode(this.context,{pan:0})})}};this.createSoundRaw=(n,t,i,r,u)=>{if(this.context){const f=this.context.createBuffer(r,i,u);for(let n=0;n<r;++n)f.getChannelData(n).set(t.subarray(n*i,n*i+i));this.sounds.set(n,{buffer:Promise.resolve(f),gain:this.context.createGain(),panner:StereoPannerNode&&new StereoPannerNode(this.context,{pan:0})})}};this.duplicateSound=(n,t)=>{if(this.context){const i=this.sounds.get(t);i&&this.sounds.set(n,{buffer:i.buffer,gain:this.context.createGain(),panner:StereoPannerNode&&new StereoPannerNode(this.context,{pan:0})})}};this.playSound=(n,t,i,r)=>{const u=this.sounds.get(n);if(u){u.source&&u.source.then(n=>{n.stop()},n=>{console.error(n)});u.gain.gain.value=Math.pow(2,t/1e3);const n=Math.pow(2,i/1e3);u.panner&&(u.panner.pan.value=1-2/(1+n));u.source=u.buffer.then(n=>{const t=this.context.createBufferSource();t.buffer=n;t.loop=Boolean(r);let i=t.connect(u.gain);return u.panner&&(i=i.connect(u.panner)),i.connect(this.context.destination),t.start(),t})}};this.stopSound=n=>{const t=this.sounds.get(n);t&&t.source&&(t.source.then(n=>{n.stop()},n=>{console.error(n)}),delete t.source)};this.deleteSound=n=>{const t=this.sounds.get(n);t&&t.source&&t.source.then(n=>{n.stop()},n=>{console.error(n)});this.sounds.delete(n)};this.setVolume=(n,t)=>{const i=this.sounds.get(n);i&&(i.gain.gain.value=Math.pow(2,t/1e3))};this.decodeAudioData=async(n,t)=>new Promise((i,r)=>{n.decodeAudioData(t,i,r)});const n=DApi;n.create_sound=this.createSound;n.create_sound_raw=this.createSoundRaw;n.play_sound=this.playSound;n.stop_sound=this.stopSound;n.delete_sound=this.deleteSound;n.duplicate_sound=this.duplicateSound;n.set_volume=this.setVolume}}class Progress{constructor(n,t,i){this.message=n;this.bytesLoaded=t;this.total=i}}class FileStore{constructor(){this.initIndexedDb=async()=>{this.store=new IdbKvStore("diablo_fs");for(const[n,t]of Object.entries(await this.store.json()))interop.dotNetReference.invokeMethod("SetFile",n.toLowerCase(),t)};this.readIndexedDb=async n=>await this.store.get(n.toLowerCase());this.indexedDbHasFile=async n=>{const t=await this.store.get(n.toLowerCase());return Boolean(t)};this.storeIndexedDb=async(n,t)=>{try{const i=new Uint8Array(t._unsafe_create_view());await this.store.set(n,i)}finally{t.dispose()}};this.removeIndexedDb=async n=>{await this.store.remove(n)};this.readFile=async n=>new Promise((t,i)=>{const r=new FileReader;r.onload=()=>{t(r.result)};r.onerror=()=>{i(r.error)};r.onabort=()=>{i()};r.onprogress=n=>interop.dotNetReference.invokeMethod("OnProgress",new Progress("Loading...",n.loaded,n.total));r.readAsArrayBuffer(n)});this.onDropFile=n=>{this.dropFile=this.getDropFile(n),this.dropFile&&(n.preventDefault(),interop.dotNetReference.invokeMethodAsync("Start",this.dropFile.name.toLowerCase(),!0))};this.getDropFile=n=>{const t=n.dataTransfer.items;if(t)for(let n=0;n<t.length;++n)if(t[n].kind==="file")return t[n].getAsFile();const i=n.dataTransfer.files;return i.length?i[0]:null};this.setDropFile=async()=>{const n=new Uint8Array(await this.readFile(this.dropFile));interop.dotNetReference.invokeMethod("SetFile",this.dropFile.name.toLowerCase(),n);this.dropFile=null};this.getRenderInterval=()=>{const n=localStorage.getItem("DiabloRenderInterval");return n===null?50:parseInt(n,10)};this.setRenderInterval=n=>{localStorage.setItem("DiabloRenderInterval",n.toString())}}}var DApi={},interop=new(class{constructor(){this.setDotNetReference=n=>{this.$dotNetReference=n};this.addEventListeners=()=>{window.addEventListener("resize",()=>this.$dotNetReference.invokeMethodAsync("OnResize",this.getCanvasRect())),document.getElementById("main").addEventListener("drop",n=>{this.$fileStore.onDropFile(n)})};this.getCanvasRect=()=>(this.$canvas||(this.$canvas=document.getElementById("canvas")),this.$canvas.getBoundingClientRect());this.clickDownloadLink=(n,t,i)=>{n.setAttribute("download",t),n.setAttribute("href",i),n.click(),n.removeAttribute("download"),n.removeAttribute("href")};this.$graphics=new Graphics;this.$sound=new Sound;this.$fileStore=new FileStore}get graphics(){return this.$graphics}get sound(){return this.$sound}get fileStore(){return this.$fileStore}get dotNetReference(){return this.$dotNetReference}});